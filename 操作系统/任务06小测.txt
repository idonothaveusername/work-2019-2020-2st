9:15 2020/5/11
一、1-5:ADACB
1、A
进程是操作系统资源分配和独立的基本单位。它包括PCB、程序和数据，以及执行栈区，仅仅说进程是在多程序环境下的完整的程序是不合适的。
2、D
短作业：t=2，J4还没到
3、A
参见记录型信号量的解析。此处极易出S.vakle物理概念题，现总结如下：
S.value＞0，表示某类可用资源的数量。每次P操作，意味着请求分配一个单位的资源。
S.value＜=0，表示某类资源已经没有了，或者说还有因请求该资源而被阻塞的进程。
S.value＜=0时的绝对值，表示等待进程数目。
切记看清题目中陈述，是执行P操作前还是P操作后。
4、C
考查死锁的条件。
考虑最极端的情况，因为每个进程最多需要3台打印机，假设每个进程已经占有了两个打印机，那么只要还有多的打印机，总能满足达到3台的条件。将8台打印机分给K个进程，每个进程有2台打印机。如下图所示：
[*]
这个情况就是极端情况，K为4。不死锁需要2K+1＜8，最多支持3个进程并发。注意问的如果是“不会发生死锁的最大值”就选B。4个以上就死锁，所以会死锁的最小值是4。此时，四个进程由于都缺少一台打印机而不能继续执行，出现了死锁的状况。
5、B
回收起始地址为60K，大小为140KB的分区后，起址为20K和起址为200K，这三块合并成一个起址为20K，大小为380KB的分区，重排序后移到最后。
二、
1、可靠性
2、并发性  异步性
3、9
10-16+15=9
P操作每执行一次，信号量减1；
V操作每执行一次，信号量加1.
4、非抢占式、抢占式
三、
1、死锁定理：S状态为死锁状态的充分条件是当且仅当S状态的资源分配图是不可完全简化的。
简化进程-资源图：
首先找出一个既不阻塞又非独立的进程结点P1，在顺利的情况下运行完毕，并释放所有其占用的资源；P1释放资源后，P2可获得资源继续运行；同理，P2释放资源后，P3可获得资源继续进行；在进行一系列简化后，图中所有的边都被消去，所有进程结点都孤立，该图可完全简化。
结论：该图可完全简化，该进程-资源图并未满足死锁定理，不是死锁的。
4、22:18 2020/5/12
semaphore mutex1 = 1,mutex2 = 1;empty = n,full = 0;
//mutex1、mutex2：对缓冲区进行互斥操作的信号量
//empty：缓冲区的空闲容量（环形缓冲区内还能存放产品的数量）
//full：缓冲区已占容量，初始为空（环形缓冲区内已经存放了的产品的数量）
producer(){
      while(1){
           P(empty);//判断缓冲区是否有空位
           P(mutex2);//互斥访问缓冲区
           生产一个产品；
           将产品放入缓冲区;
           V(mutex2);//互斥访问缓冲区
           V(full);//缓冲区队列加1
      }
}
consumer(){
      while(1){
            P(mutex1);
            for(int i = 0;i <= 10;i++){//连续取走10件产品
                P(full);//判断缓冲区队列中是否有产品
                P(mutex2);//互斥访问缓冲区
                从缓冲区中取出一件产品;
                V(mutex2);//互斥访问缓冲区
                V(empty);//缓冲区队列中减1
                消费这件产品；
            }
            V(mutex1);
      }
}